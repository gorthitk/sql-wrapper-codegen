plugins {
    id 'java-gradle-plugin'
    id 'maven-publish'
    id "com.gradle.plugin-publish" version "0.12.0"
}

repositories {
    jcenter()
}

version = '1.1.1'
group = 'org.jet'

publishing {
    publications {
        maven(MavenPublication) {
            artifactId = project.name
            version = project.version

            from components.java
        }
    }
}

// Use java-gradle-plugin to generate plugin descriptors and specify plugin ids
gradlePlugin {
    plugins {
        greetingsPlugin {
            id = 'org.jet.sql.codegen'
            implementationClass = 'org.jet.sql.codegen.plugin.SqlWrapperPlugin'
        }
    }
}

// The configuration example below shows the minimum required properties
// configured to publish your plugin to the plugin portal
pluginBundle {
    website = 'https://jetsasank.github.io/sql-wrapper-codegen/'
    vcsUrl = 'https://github.com/jetsasank/sql-wrapper-codegen'
    description = 'Plugin to generate type safe java wrapper classes for running JDBC Prepared Statement'
    tags = ['java', 'jdbc' ,'type-safe', 'generate']

    plugins {
        greetingsPlugin {
            displayName = 'Java SQL Type safe wrapper generate plugin'
        }
    }
}

jar {
    manifest {
        attributes('Implementation-Title': project.name, 'Implementation-Version': project.version)
    }
}

dependencies {
    compile gradleApi()
    compile 'postgresql:postgresql:9.1-901-1.jdbc4'
    compile group: 'mysql', name: 'mysql-connector-java', version: '8.0.20'
    compile group: 'com.fasterxml.jackson.dataformat', name: 'jackson-dataformat-yaml', version: '2.10.1'
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.10.1'
    compile group: 'com.github.spullara.mustache.java', name: 'compiler', version: '0.8.9'

    testImplementation 'org.testng:testng:6.14.3'
    testCompile "org.mockito:mockito-core:1.+"
}

test {
    useTestNG()
}